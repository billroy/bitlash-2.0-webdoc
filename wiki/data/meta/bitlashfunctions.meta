a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1296942578;s:8:"modified";i:1312833262;}s:7:"creator";s:12:"entropymouse";s:11:"last_change";a:7:{s:4:"date";i:1312833262;s:2:"ip";s:14:"38.100.147.146";s:4:"type";s:1:"E";s:2:"id";s:16:"bitlashfunctions";s:4:"user";s:4:"karl";s:3:"sum";s:119:"[Reserving EEPROM for Other Applications] Add a note that flashing firmware from Arduino will not erase reserved EEPROM";s:5:"extra";s:0:"";}s:11:"contributor";a:2:{s:7:"wikiops";s:12:"entropymouse";s:4:"karl";s:15:"Karl Lehenbauer";}s:4:"user";s:0:"";s:5:"title";s:17:"Bitlash Functions";s:11:"description";a:2:{s:15:"tableofcontents";a:13:{i:0;a:4:{s:3:"hid";s:17:"bitlash_functions";s:5:"title";s:17:"Bitlash Functions";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:24:"rules_for_function_names";s:5:"title";s:24:"Rules For Function Names";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:2;a:4:{s:3:"hid";s:19:"defining_a_function";s:5:"title";s:19:"Defining a Function";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:24:"run_a_functionforeground";s:5:"title";s:26:"Run a function: foreground";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:24:"run_a_functionbackground";s:5:"title";s:26:"Run a function: background";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:24:"list_functions_in_eeprom";s:5:"title";s:24:"List functions in EEPROM";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:29:"remove_a_function_from_eeprom";s:5:"title";s:29:"Remove a function from EEPROM";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:20:"the_startup_function";s:5:"title";s:20:"The Startup Function";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:8;a:4:{s:3:"hid";s:19:"the_prompt_function";s:5:"title";s:19:"The Prompt Function";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:9;a:4:{s:3:"hid";s:56:"inspecting_and_formatting_function_storage_in_the_eeprom";s:5:"title";s:56:"Inspecting and Formatting Function Storage in the EEPROM";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:10;a:4:{s:3:"hid";s:46:"a_note_on_eeprom_usagedon_t_bang_on_the_eeprom";s:5:"title";s:48:"A note on EEPROM usage: Don't bang on the EEPROM";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:11;a:4:{s:3:"hid";s:31:"eeprom_free_space_fragmentation";s:5:"title";s:31:"EEPROM Free Space Fragmentation";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:12;a:4:{s:3:"hid";s:39:"reserving_eeprom_for_other_applications";s:5:"title";s:39:"Reserving EEPROM for Other Applications";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:483:"Bitlash Functions

Bitlash allows you to store and manage Bitlash Functions in the Arduino's EEPROM.  By defining new functions, you extend Bitlash to suit your application.

Think of a function as a stored command line.  In Bitlash, that can be multiple statements.  And a statement within a function can call a function, so function execution can nest like subroutine calls (up to a dozen levels deep or so).
But the simplest use is simply to give a name to a sequence of commands.";}s:8:"relation";a:2:{s:10:"references";a:1:{s:19:"backgroundfunctions";b:1;}s:10:"firstimage";s:0:"";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1296942578;s:8:"modified";i:1312833262;}s:7:"creator";s:12:"entropymouse";s:11:"last_change";a:7:{s:4:"date";i:1312833262;s:2:"ip";s:14:"38.100.147.146";s:4:"type";s:1:"E";s:2:"id";s:16:"bitlashfunctions";s:4:"user";s:4:"karl";s:3:"sum";s:119:"[Reserving EEPROM for Other Applications] Add a note that flashing firmware from Arduino will not erase reserved EEPROM";s:5:"extra";s:0:"";}s:11:"contributor";a:2:{s:7:"wikiops";s:12:"entropymouse";s:4:"karl";s:15:"Karl Lehenbauer";}s:4:"user";s:0:"";}}