a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1265206368;s:8:"modified";i:1312649382;}s:7:"creator";s:12:"entropymouse";s:11:"last_change";a:7:{s:4:"date";i:1312649382;s:2:"ip";s:13:"70.140.190.80";s:4:"type";s:1:"E";s:2:"id";s:13:"userfunctions";s:4:"user";s:4:"karl";s:3:"sum";s:44:"Changed all occurrences of getArg to getarg.";s:5:"extra";s:0:"";}s:11:"contributor";a:2:{s:7:"wikiops";s:12:"entropymouse";s:4:"karl";s:15:"Karl Lehenbauer";}s:4:"user";s:0:"";s:5:"title";s:22:"Bitlash User Functions";s:11:"description";a:2:{s:15:"tableofcontents";a:12:{i:0;a:4:{s:3:"hid";s:22:"bitlash_user_functions";s:5:"title";s:22:"Bitlash User Functions";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:24:"declaring_the_c_function";s:5:"title";s:24:"Declaring the C function";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:2;a:4:{s:3:"hid";s:46:"registering_a_function_with_addbitlashfunction";s:5:"title";s:48:"Registering a Function With addBitlashFunction()";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:17:"the_function_name";s:5:"title";s:17:"The Function Name";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:37:"fetching_passed_arguments_with_getarg";s:5:"title";s:39:"Fetching Passed Arguments with getarg()";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:29:"the_function_handler_argument";s:5:"title";s:29:"The Function Handler Argument";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:36:"notemaximum_number_of_user_functions";s:5:"title";s:38:"NOTE: Maximum Number of User Functions";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:21:"coding_user_functions";s:5:"title";s:21:"Coding User Functions";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:8;a:4:{s:3:"hid";s:15:"sharing_the_cpu";s:5:"title";s:15:"Sharing the CPU";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:9;a:4:{s:3:"hid";s:34:"calling_internal_bitlash_functions";s:5:"title";s:34:"Calling Internal Bitlash Functions";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:10;a:4:{s:3:"hid";s:47:"printing_from_user_functionsconsole_redirection";s:5:"title";s:49:"Printing From User Functions: Console Redirection";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:11;a:4:{s:3:"hid";s:8:"examples";s:5:"title";s:8:"Examples";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:500:"Bitlash User Functions

While Bitlash functions are a handy and straightforward way to extend Bitlash, there are cases where you need native C code to get closer to the hardware, perhaps for speed or to interface with a custom peripheral.

Starting with version 1.1, Bitlash provides an easy way to call C functions from Bitlash code, just like the Bitlash built-in functions.  In effect, you add your functions to the Bitlash function library, and they become callable from the Bitlash command line.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1265206368;s:8:"modified";i:1312649382;}s:7:"creator";s:12:"entropymouse";s:11:"last_change";a:7:{s:4:"date";i:1312649382;s:2:"ip";s:13:"70.140.190.80";s:4:"type";s:1:"E";s:2:"id";s:13:"userfunctions";s:4:"user";s:4:"karl";s:3:"sum";s:44:"Changed all occurrences of getArg to getarg.";s:5:"extra";s:0:"";}s:11:"contributor";a:2:{s:7:"wikiops";s:12:"entropymouse";s:4:"karl";s:15:"Karl Lehenbauer";}s:4:"user";s:0:"";}}