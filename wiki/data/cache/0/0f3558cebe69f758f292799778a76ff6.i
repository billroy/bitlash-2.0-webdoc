a:173:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Bitlash Online";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:27;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"Welcome to Bitlash Online.";}i:2;i:28;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:54;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:54;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:"Bitlash is an open source interpreted language shell and embedded programming environment.  This website documents Bitlash for the popular and useful ";}i:2;i:56;}i:8;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:17:"http://arduino.cc";i:1;s:7:"Arduino";}i:2;i:206;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:235;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:236;}i:11;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:236;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:158:"The Bitlash shell runs entirely on the Arduino and supports many of the familiar Arduino functions.  Bitlash interprets commands you type on the serial port:
";}i:2;i:238;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:401;}i:14;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:123:"
bitlash here! v1.1 (c) 2010 Bill Roy -type HELP- 1383 bytes free
> print "Hello, world!", millis()
Hello, world! 11939
> 
";i:1;N;i:2;N;}i:2;i:401;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:401;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"
It's easy to extend Bitlash by naming a sequence of commands as a ";}i:2;i:532;}i:17;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:15:"macros:overview";i:1;s:5:"Macro";}i:2;i:599;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:231:", which is like a new word in the Bitlash language.  A Bitlash application is a set of such macros, and since they are stored in the EEPROM, Bitlash can start up your application automatically at boot time for standalone operation.";}i:2;i:624;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:855;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:855;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:187:"In cases where you need native C code to get closer to the hardware, perhaps for speed or to interface with a custom peripheral,
it's also easy to integrate your C code with Bitlash as a ";}i:2;i:858;}i:22;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:13:"userfunctions";i:1;s:13:"User Function";}i:2;i:1045;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:1076;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1077;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1077;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Read on for more about Bitlash.";}i:2;i:1079;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1110;}i:28;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1112;}i:29;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"Quick Start";i:1;i:3;i:2;i:1112;}i:2;i:1112;}i:30;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1112;}i:31;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1133;}i:32;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1133;}i:33;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1133;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1137;}i:35;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"Download";i:1;N;}i:2;i:1138;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" the latest release of Bitlash for the Arduino";}i:2;i:1150;}i:37;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1196;}i:38;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1196;}i:39;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1196;}i:40;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1196;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1200;}i:42;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:7:"Install";i:1;N;}i:2;i:1201;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" Bitlash and upload it to your Arduino";}i:2;i:1212;}i:44;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1250;}i:45;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1250;}i:46;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1250;}i:47;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1250;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" Proceed to the ";}i:2;i:1254;}i:49;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"docindex";i:1;s:19:"Documentation Index";}i:2;i:1270;}i:50;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1302;}i:51;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1302;}i:52;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1302;}i:53;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1302;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" Read more ";}i:2;i:1306;}i:55;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:5:"about";i:1;s:13:"About Bitlash";}i:2;i:1317;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" and the ";}i:2;i:1340;}i:57;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:6:"Author";i:1;N;}i:2;i:1349;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1359;}i:59;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1359;}i:60;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1359;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1359;}i:62;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"---";}i:2;i:1360;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"-";}i:2;i:1363;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1364;}i:65;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1366;}i:66;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"What is Bitlash?";i:1;i:3;i:2;i:1366;}i:2;i:1366;}i:67;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1366;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1392;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:343:"
Bitlash is an embedded interpreter that runs in about 14k of memory on an Atmel AVR processor.  It works nicely with Arduino to make a development and prototyping tool for those situations where you need to bang some bits on the Arduino but writing a sketch in C is premature.  It's very convenient for bringing up and debugging new hardware.";}i:2;i:1393;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1736;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1736;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:222:"The Bitlash command language is very similar to Arduino C and includes a large repertiore of the familiar Arduino C functions so you can hack your hardware from the serial command line or even over the internet via telnet.";}i:2;i:1738;}i:73;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1960;}i:74;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1960;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"You can store commands as ";}i:2;i:1962;}i:76;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:15:"macros:overview";i:1;s:6:"macros";}i:2;i:1988;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:198:" in EEPROM and autostart them at bootup, making the automation and maintenance of small applications very easy.  Here is the classic Blink13 program as a complete Bitlash application in two macros, ";}i:2;i:2014;}i:78;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2212;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"toggle13";}i:2;i:2214;}i:80;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2222;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" to toggle the led and ";}i:2;i:2224;}i:82;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2247;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"startup";}i:2;i:2249;}i:84;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2256;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" to initialize and run it:
";}i:2;i:2258;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2290;}i:87;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:90:"
> toggle13:="d13=!d13"
> startup:="pinmode(13,1);run toggle13,1000"
> boot
(d13 flashes)
";i:1;N;i:2;N;}i:2;i:2290;}i:88;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2389;}i:89;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2395;}i:90;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"Release Announcements";i:1;i:3;i:2;i:2395;}i:2;i:2395;}i:91;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2395;}i:92;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2428;}i:93;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:32:"Bitlash 1.1 Release Announcement";i:1;i:4;i:2;i:2428;}i:2;i:2428;}i:94;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:2428;}i:95;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2468;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"
Bitlash 1.1 is available at the ";}i:2;i:2469;}i:97;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"download";i:1;N;}i:2;i:2502;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" page.  Here is a summary of the changes:
";}i:2;i:2514;}i:99;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2556;}i:100;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2556;}i:101;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2556;}i:102;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2556;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2560;}i:104;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2561;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"User Functions:";}i:2;i:2563;}i:106;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2578;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" This release is mainly about the new ";}i:2;i:2580;}i:108;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:13:"userfunctions";i:1;N;}i:2;i:2618;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:" feature, which makes it Really Easy to add your C function to Bitlash.  You'll find some new examples of this feature in the Arduino IDE at the File ";}i:2;i:2635;}i:110;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:2785;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" Examples ";}i:2;i:2787;}i:112;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:2797;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" bitlash menu item, and documentation at the ";}i:2;i:2799;}i:114;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:13:"userfunctions";i:1;N;}i:2;i:2844;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" page.";}i:2;i:2861;}i:116;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2867;}i:117;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2867;}i:118;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2867;}i:119;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2868;}i:120;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2868;}i:121;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2868;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2872;}i:123;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2873;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"New Functions inb() and outb(): ";}i:2;i:2875;}i:125;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2907;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" Read and write the AVR registers from your Bitlash scripts.  Details on the ";}i:2;i:2909;}i:127;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:9:"functions";i:1;N;}i:2;i:2986;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" page.";}i:2;i:2999;}i:129;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3005;}i:130;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3005;}i:131;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3005;}i:132;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3006;}i:133;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3006;}i:134;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3006;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3010;}i:136;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3011;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"Deprecated Functions:";}i:2;i:3013;}i:138;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3034;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:" These functions didn't make the cut at spring cleaning time and are no longer supported in the Bitlash core: du(), map(), shiftout(), sa(), sr() and usr().";}i:2;i:3036;}i:140;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3192;}i:141;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3192;}i:142;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3192;}i:143;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3198;}i:144;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Bitlash 1.0 Available Now";i:1;i:4;i:2;i:3198;}i:2;i:3198;}i:145;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:3198;}i:146;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3231;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"
After over a year in development Bitlash 1.0 is available for ";}i:2;i:3232;}i:148;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"download";i:1;N;}i:2;i:3295;}i:149;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:". ";}i:2;i:3307;}i:150;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3309;}i:151;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3309;}i:152;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:155:"There is one bug fix since the RC2 version, renaming the folders and files in the /examples tree to remove the '-' which became deprecated in Arduino 0017.";}i:2;i:3311;}i:153;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3466;}i:154;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3466;}i:155;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"Bitlash 1.0 is tested on ";}i:2;i:3468;}i:156;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:34:"http://arduino.cc/en/Main/Software";i:1;s:12:"Arduino 0017";}i:2;i:3493;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:3544;}i:158;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:47:"http://code.google.com/p/arduino/downloads/list";i:1;s:16:"Arduino 0018 RC1";}i:2;i:3549;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:".  The ";}i:2;i:3617;}i:160;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:7:"install";i:1;N;}i:2;i:3624;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" instructions are updated for 0017.  ";}i:2;i:3635;}i:162;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3672;}i:163;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3674;}i:164;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Documentation Overhaul";i:1;i:5;i:2;i:3674;}i:2;i:3674;}i:165;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:3674;}i:166;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3702;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"
The Bitlash documentation is now hosted in this wiki.  Please send comments to the ";}i:2;i:3703;}i:168;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:6:"Author";i:1;N;}i:2;i:3787;}i:169;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3797;}i:170;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3797;}i:171;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3802;}i:172;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3802;}}