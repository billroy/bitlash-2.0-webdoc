a:296:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"The Bitlash Install Page";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:38;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Requirements";i:1;i:3;i:2;i:38;}i:2;i:38;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:38;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:38;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"You need an ";}i:2;i:62;}i:8;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:17:"http://arduino.cc";i:1;s:7:"Arduino";}i:2;i:74;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" connected to a PC with a working Arduino IDE.  These directions are for ";}i:2;i:103;}i:10;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:34:"http://arduino.cc/en/Main/Software";i:1;s:24:"Arduino IDE version 0022";}i:2;i:176;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:", but they work for earlier versions back to 0017.";}i:2;i:239;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:289;}i:13;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:289;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:199:"Since Bitlash is an Arduino library you upload with a sketch, you need to be comfortable uploading sketches.  Get this working first to save debugging headaches.  There is plenty of help over at the ";}i:2;i:291;}i:15;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:43:"http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl";i:1;s:14:"Arduino Forums";}i:2;i:490;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:552;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:553;}i:18;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:553;}i:19;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:559;}i:20;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Download Bitlash";i:1;i:3;i:2;i:559;}i:2;i:559;}i:21;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:559;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:559;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"The current version of Bitlash is available at the  ";}i:2;i:586;}i:24;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"download";i:1;s:8:"Download";}i:2;i:638;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" page.";}i:2;i:659;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:666;}i:27;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:666;}i:28;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:673;}i:29;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:40:"Install Bitlash: Arduino 0017 - 0022 IDE";i:1;i:3;i:2;i:673;}i:2;i:673;}i:30;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:673;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:673;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"The ";}i:2;i:725;}i:33;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"http://arduino.cc/en/Guide/Environment#libraries";i:1;s:37:"Arduino Development Environment Guide";}i:2;i:729;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" specifies this procedure for installing third party libraries:";}i:2;i:819;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:888;}i:36;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:143:"
"To install these third-party libraries, create a directory
called libraries within your sketchbook directory. Then unzip
the library there."
";i:1;N;i:2;N;}i:2;i:888;}i:37;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:888;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"There is also a ";}i:2;i:1041;}i:39;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:29:"http://arduino.cc/blog/?p=313";i:1;s:27:" post on the Arduino weblog";}i:2;i:1057;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" with further explanation.";}i:2;i:1118;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1144;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1144;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"So, to install Bitlash,";}i:2;i:1146;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1169;}i:45;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1169;}i:46;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1169;}i:47;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1169;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" Create a directory called ";}i:2;i:1174;}i:49;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1201;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"libraries";}i:2;i:1203;}i:51;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1212;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" within your sketchbook directory";}i:2;i:1214;}i:53;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1247;}i:54;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1247;}i:55;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1247;}i:56;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1248;}i:57;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1248;}i:58;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1248;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:" Unzip the download and copy or move the Bitlash distribution folder into the ";}i:2;i:1252;}i:60;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1330;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"libraries";}i:2;i:1332;}i:62;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1341;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" folder you just created  Rename the resulting folder to simply ";}i:2;i:1343;}i:64;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1407;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bitlash";}i:2;i:1409;}i:66;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1416;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:", if necessary, to remove the version number.  You should end up with a folder setup that looks like this:";}i:2;i:1418;}i:68;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1524;}i:69;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1524;}i:70;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1524;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1524;}i:72;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:18:"installfolders.jpg";i:1;N;i:2;s:6:"center";i:3;N;i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:1525;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:1549;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1550;}i:75;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1550;}i:76;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1550;}i:77;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1550;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" Restart the Arduino IDE; if all goes well, you will find the ";}i:2;i:1554;}i:79;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1616;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"bitlash";}i:2;i:1618;}i:81;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1625;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" library listed in the ";}i:2;i:1627;}i:83;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1650;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"Sketch / Import Library";}i:2;i:1652;}i:85;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1675;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" menu.";}i:2;i:1677;}i:87;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1683;}i:88;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1683;}i:89;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1683;}i:90;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1684;}i:91;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1684;}i:92;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1684;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" Select ";}i:2;i:1688;}i:94;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1696;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"File / Examples / bitlash / bitlashdemo";}i:2;i:1698;}i:96;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1737;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" to open the demo sketch, then ";}i:2;i:1739;}i:98;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1770;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"File / Upload";}i:2;i:1772;}i:100;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1785;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" to compile and upload it to your Arduino.";}i:2;i:1787;}i:102;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1829;}i:103;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1829;}i:104;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1829;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1829;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:"When your upload is complete, you are ready to connect to Bitlash.  Proceed to the next section on Connecting.";}i:2;i:1831;}i:107;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1942;}i:108;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1942;}i:109;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1948;}i:110;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:32:"Connect With a Terminal Emulator";i:1;i:3;i:2;i:1948;}i:2;i:1948;}i:111;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1948;}i:112;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1948;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"Connect to the serial port at 57600 baud using whatever terminal emulator works for you.  Here are some options:";}i:2;i:1991;}i:114;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2104;}i:115;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2104;}i:116;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2104;}i:117;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2104;}i:118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" You can use the built-in Arduino Serial Monitor, but see the note below";}i:2;i:2108;}i:119;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2180;}i:120;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2180;}i:121;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2180;}i:122;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2180;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" On Windows, HyperTerminal seems popular";}i:2;i:2184;}i:124;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2224;}i:125;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2224;}i:126;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2224;}i:127;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2224;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" On ";}i:2;i:2228;}i:129;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:2232;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" X I use ";}i:2;i:2234;}i:131;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2243;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"screen";}i:2;i:2245;}i:133;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2251;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:", ";}i:2;i:2253;}i:135;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"tips:mac";i:1;s:8:"CoolTerm";}i:2;i:2255;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:", and ";}i:2;i:2276;}i:137;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"bitty.py";i:1;N;}i:2;i:2282;}i:138;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2294;}i:139;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2294;}i:140;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2294;}i:141;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2294;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" On Linux ";}i:2;i:2298;}i:143;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2308;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"screen";}i:2;i:2310;}i:145;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2316;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" is available on most distributions";}i:2;i:2318;}i:147;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2353;}i:148;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2353;}i:149;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2353;}i:150;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2355;}i:151;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:51:"NOTE: Using Bitlash with the Arduino Serial Monitor";i:1;i:5;i:2;i:2355;}i:2;i:2355;}i:152;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:2355;}i:153;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2355;}i:154;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"To use the Arduino ";}i:2;i:2413;}i:155;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2432;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Serial Monitor";}i:2;i:2433;}i:157;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2447;}i:158;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" function with Bitlash, you must select ";}i:2;i:2448;}i:159;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2488;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"Carriage return";}i:2;i:2489;}i:161;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2504;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" line ending handling option.  The Bitlash demos use a baud rate of 57600.";}i:2;i:2505;}i:163;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2579;}i:164;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2581;}i:165;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:49:"Example: Starting the screen command with Bitlash";i:1;i:5;i:2;i:2581;}i:2;i:2581;}i:166;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:2581;}i:167;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2581;}i:168;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"Here is an example using the ";}i:2;i:2638;}i:169;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2667;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"screen";}i:2;i:2669;}i:171;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2675;}i:172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" program in ";}i:2;i:2677;}i:173;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:2689;}i:174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" X to connect with Bitlash on a USB-connected Arduino.  The /dev/tty.usb";}i:2;i:2691;}i:175;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:2763;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:125:" part is the virtual serial port name that you can find in the Arduino Tools/Serial Port menu and the 57600 is the baud rate:";}i:2;i:2766;}i:177;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2897;}i:178;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:110:"
$ screen /dev/tty.usbserial-A7003pQ3 57600
bitlash 2.0 here! (c) 2011 Bill Roy -type HELP- 935 bytes free
> 
";i:1;N;i:2;N;}i:2;i:2897;}i:179;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2897;}i:180;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:"Congratulations, you are up and running: Bitlash is listening for commands, as signified by the '>' prompt.";}i:2;i:3017;}i:181;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3124;}i:182;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3124;}i:183;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3131;}i:184;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Hello, World!";i:1;i:3;i:2;i:3131;}i:2;i:3131;}i:185;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3131;}i:186;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3131;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"Now that you have a command prompt you can type a command, and press Enter.  ";}i:2;i:3156;}i:188;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3233;}i:189;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3233;}i:190;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"Here is the usual Hello World example you might run as your first Bitlash program:";}i:2;i:3235;}i:191;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3323;}i:192;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:41:"
> print "Hello, world!"
Hello, world!
>
";i:1;N;i:2;N;}i:2;i:3323;}i:193;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3323;}i:194;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"While you're there you might check the arithmetic:";}i:2;i:3373;}i:195;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3429;}i:196;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:15:"
> print 2+2
4
";i:1;N;i:2;N;}i:2;i:3429;}i:197;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3453;}i:198;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3459;}i:199;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"First App: Blink13";i:1;i:3;i:2;i:3459;}i:2;i:3459;}i:200;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3459;}i:201;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3459;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"No discussion of ";}i:2;i:3488;}i:203;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3505;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Hello, world!";}i:2;i:3506;}i:205;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3519;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:" for embedded systems would be complete without blinking an LED.  This example shows how to build a complete Bitlash application using Bitlash functions and auto-start.";}i:2;i:3520;}i:207;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3688;}i:208;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3688;}i:209;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"First it is necessary to introduce the concept of ";}i:2;i:3690;}i:210;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3740;}i:211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"pin variables";}i:2;i:3742;}i:212;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3755;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:167:": Bitlash gives direct access to the digital IO pins via single-bit variables named d0, d1, d2, and so on.  You can read a pin variable's value and print it like this:";}i:2;i:3757;}i:214;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3930;}i:215;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:15:"
> print d12
0
";i:1;N;i:2;N;}i:2;i:3930;}i:216;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3930;}i:217;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:3954;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"and assign it like this:";}i:2;i:3957;}i:219;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3987;}i:220;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:29:"
> d13=1   // turn on pin 13
";i:1;N;i:2;N;}i:2;i:3987;}i:221;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3987;}i:222;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:4025;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"though you must remember to set the pin mode if you want the port to be an output:";}i:2;i:4028;}i:224;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4116;}i:225;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:17:"
> pinmode(13,1)
";i:1;N;i:2;N;}i:2;i:4116;}i:226;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4116;}i:227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"So, returning to blink13, what we want is to toggle the pin periodically.  Let's define a ";}i:2;i:4142;}i:228;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"function";i:1;s:8:"function";}i:2;i:4232;}i:229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" named ";}i:2;i:4253;}i:230;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4260;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"toggle13";}i:2;i:4262;}i:232;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4270;}i:233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" to toggle the pin:";}i:2;i:4272;}i:234;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4297;}i:235;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:35:"
> function toggle13 {d13 = !d13;}
";i:1;N;i:2;N;}i:2;i:4297;}i:236;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4297;}i:237;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"A ";}i:2;i:4341;}i:238;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"function";i:1;s:8:"function";}i:2;i:4343;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" named ";}i:2;i:4364;}i:240;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4371;}i:241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"toggle13";}i:2;i:4373;}i:242;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4381;}i:243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" containing the Bitlash code ";}i:2;i:4383;}i:244;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4412;}i:245;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"d13=!d13;";}i:2;i:4413;}i:246;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4422;}i:247;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" is defined and saved in EEPROM.  When the function ";}i:2;i:4423;}i:248;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4475;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"toggle13";}i:2;i:4477;}i:250;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4485;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:" runs, this program text sets pin d13 to the logical complement of its current value: if it was zero, it becomes one, and vice versa.";}i:2;i:4487;}i:252;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4620;}i:253;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4620;}i:254;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"Now all we need is to arrange for ";}i:2;i:4622;}i:255;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4656;}i:256;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"toggle13";}i:2;i:4658;}i:257;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4666;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:" to be run at the desired toggle rate, let's say every 1000 milliseconds; and let's not forget to set pin 13 as an output.  By using the special function name ";}i:2;i:4668;}i:259;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4827;}i:260;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"startup";}i:2;i:4829;}i:261;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4836;}i:262;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:" we designate this function to be automagically run at boot time, completing our application:";}i:2;i:4838;}i:263;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4937;}i:264;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:54:"
function startup {pinmode(13,1); run toggle13,1000;}
";i:1;N;i:2;N;}i:2;i:4937;}i:265;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4937;}i:266;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:"List our functions to make sure they're right using the ";}i:2;i:5000;}i:267;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"commands";i:1;s:2:"ls";}i:2;i:5056;}i:268;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" command:";}i:2;i:5071;}i:269;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5086;}i:270;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:94:"
> ls
function toggle13 {d13 = !d13;};
function startup {pinmode(13,1); run toggle13,1000;}
>
";i:1;N;i:2;N;}i:2;i:5086;}i:271;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5086;}i:272;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"You can invoke the startup function from the command line to test:";}i:2;i:5189;}i:273;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5261;}i:274;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:44:"
> startup
(the LED on pin d13 is blinking)
";i:1;N;i:2;N;}i:2;i:5261;}i:275;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5261;}i:276;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"You can also restart to test the power-on startup:";}i:2;i:5314;}i:277;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5370;}i:278;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:63:"
> boot
bitlash here! v2.0...
(the LED on pin d13 is blinking)
";i:1;N;i:2;N;}i:2;i:5370;}i:279;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:5441;}i:280;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5448;}i:281;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Next Steps: Learn Bitlash";i:1;i:3;i:2;i:5448;}i:2;i:5448;}i:282;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5448;}i:283;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5448;}i:284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"Congratulations!  If you get this far, you have a free-standing development environment on your Arduino.";}i:2;i:5485;}i:285;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5589;}i:286;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5589;}i:287;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:"You will very likely find it useful to proceed to the ";}i:2;i:5591;}i:288;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"docindex";i:1;s:19:"Documentation Index";}i:2;i:5645;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:5677;}i:290;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5678;}i:291;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5678;}i:292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Happy Hacking!";}i:2;i:5680;}i:293;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5694;}i:294;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5694;}i:295;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:5694;}}