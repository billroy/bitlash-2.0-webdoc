a:216:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Bitlash Macros";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"Bitlash allows you to store and manage ";}i:2;i:29;}i:5;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:68;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"macros";}i:2;i:70;}i:7;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:76;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:" in the Arduino's EEPROM.  By defining new words, you extend Bitlash to suit your application.";}i:2;i:78;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:172;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:172;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:296:"Think of a macro as a stored command line.  In Bitlash, that can be multiple statements.  And a statement within a macro can call a macro, so macro execution can nest like subroutine calls (up to a dozen levels deep or so).
But the simplest use is simply to give a name to a sequence of commands.";}i:2;i:174;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:470;}i:13;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:472;}i:14;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:479;}i:15;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"Rules For Macro Names";i:1;i:3;i:2;i:479;}i:2;i:479;}i:16;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:479;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:479;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"Macro names must begin with an alpha character ['a'..'z'] and be 12 characters or less in length. (Yes, ";}i:2;i:512;}i:19;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:616;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"filename.txt";}i:2;i:617;}i:21;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:629;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:348:" is a legal macro name.)  Macro names must be more than one character long (to avoid conflict with the built-in numeric variables named a through z) and must not conflict with any of the pin variables (d0..22 and a0..7), nor with the built-in functions and commands.  Macro names can contain digits and the underscore '_' and period '.' characters.";}i:2;i:630;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:979;}i:24;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:979;}i:25;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:985;}i:26;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Defining a Macro";i:1;i:3;i:2;i:985;}i:2;i:985;}i:27;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:985;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:985;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"To define a macro, use the ";}i:2;i:1013;}i:30;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1040;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"name := ";}i:2;i:1042;}i:32;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1050;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"value";}i:2;i:1051;}i:34;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1056;}i:35;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1057;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" syntax:";}i:2;i:1059;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1073;}i:38;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:261:"
> toggle13:="d13=!d13;delay(100)"	// defines toggle13: flip the bit and wait a while
> startup:="while 1:toggle13"	// defines startup.  this name is special.  see below.
> hello:="print(\"hello, world\")"	// note: to include a " type it as \" per this example
";i:1;N;i:2;N;}i:2;i:1073;}i:39;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1343;}i:40;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1349;}i:41;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Run a macro: foreground";i:1;i:3;i:2;i:1349;}i:2;i:1349;}i:42;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1349;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1349;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:142:"To invoke a macro, you can type its name at the command line or refer to it in another macro (for example in the definition of startup above):";}i:2;i:1384;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1532;}i:46;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:30:"
> toggle13			// flips bit 13
";i:1;N;i:2;N;}i:2;i:1532;}i:47;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1570;}i:48;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1577;}i:49;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Run a macro: background";i:1;i:3;i:2;i:1577;}i:2;i:1577;}i:50;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1577;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1577;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"To run a macro in the background use the ";}i:2;i:1612;}i:53;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1653;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"run";}i:2;i:1655;}i:55;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1658;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" command:";}i:2;i:1660;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1675;}i:58;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:140:"
> run toggle13
> ps			// is anything running?
0: toggle13		// yes, there's our macro running
> stop 0		// stop it
>				// now it's stopped
";i:1;N;i:2;N;}i:2;i:1675;}i:59;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1675;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"There is more detail on this topic in the ";}i:2;i:1824;}i:61;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:17:"macros:background";i:1;s:17:"Background Macros";}i:2;i:1866;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" section.";}i:2;i:1905;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1915;}i:64;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1915;}i:65;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1921;}i:66;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"List macros in EEPROM";i:1;i:3;i:2;i:1921;}i:2;i:1921;}i:67;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1921;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1921;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"To list all the macros stored in the EEPROM use the ";}i:2;i:1954;}i:70;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2006;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"ls";}i:2;i:2008;}i:72;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2010;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" command:";}i:2;i:2012;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2027;}i:75;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:115:"
> ls					// list all the macros
toggle13:="d13=!d13"
startup:="while 1:toggle13"
hello:="print(\"hello, world\")"
";i:1;N;i:2;N;}i:2;i:2027;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2027;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Note that ";}i:2;i:2152;}i:78;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2162;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"ls";}i:2;i:2164;}i:80;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2166;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" inserts '\' before escape characters.";}i:2;i:2168;}i:82;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2207;}i:83;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2207;}i:84;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2213;}i:85;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"Remove a macro from EEPROM";i:1;i:3;i:2;i:2213;}i:2;i:2213;}i:86;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2213;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2213;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"To remove a macro use the ";}i:2;i:2251;}i:89;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2277;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"rm";}i:2;i:2279;}i:91;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2281;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" command:";}i:2;i:2283;}i:93;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2298;}i:94;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:119:"
> rm hello				// rm removes a macro.  rm * does what you think.
> ls
toggle13:="d13=!d13"
startup:="while 1:toggle13"
";i:1;N;i:2;N;}i:2;i:2298;}i:95;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2426;}i:96;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2432;}i:97;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"The Startup Macro";i:1;i:3;i:2;i:2432;}i:2;i:2432;}i:98;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2432;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2432;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"If there is a macro by the name ";}i:2;i:2461;}i:101;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2493;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"startup";}i:2;i:2494;}i:103;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2501;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:", it is run automatically at boot time.
Make one like this:";}i:2;i:2502;}i:105;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2567;}i:106;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:66:"
> startup:="print(1,2,3)"
> boot
bitlash v0.99z here!...
1 2 3
>
";i:1;N;i:2;N;}i:2;i:2567;}i:107;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2567;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Don't like it?";}i:2;i:2642;}i:109;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2662;}i:110;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:111:"
> startup:="...new definition..."		// redefine the startup macro
> rm startup					// delete the startup macro
";i:1;N;i:2;N;}i:2;i:2662;}i:111;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2662;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"Tip: If it looks like it's sitting there doing nothing, it's probably running a macro.  Press ^C to break out of a looping startup command.";}i:2;i:2783;}i:113;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2923;}i:114;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2923;}i:115;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2929;}i:116;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"The Prompt Macro";i:1;i:3;i:2;i:2929;}i:2;i:2929;}i:117;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2929;}i:118;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2929;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"If there is a macro by the name ";}i:2;i:2957;}i:120;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2989;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"prompt";}i:2;i:2990;}i:122;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2996;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:190:", it is run automatically whenever the command line prompt is to be printed so that you can customize the prompt.
Here is an example of a prompt macro that prints the current time in millis:";}i:2;i:2997;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3193;}i:125;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:104:"
> prompt:="print millis,;print\"$\","
36244$ 		// press enter at this prompt
36484$ 		// time advances
";i:1;N;i:2;N;}i:2;i:3193;}i:126;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3306;}i:127;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3312;}i:128;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:53:"Inspecting and Formatting Macro Storage in the EEPROM";i:1;i:3;i:2;i:3312;}i:2;i:3312;}i:129;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3312;}i:130;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3312;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:158:"There may be debris in your EEPROM from another project.  Or your Bitlash program can blow chunks, or Bitlash can blow chunks.  Anyway, the EEPROM can become ";}i:2;i:3377;}i:132;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3535;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"less than fresh";}i:2;i:3536;}i:134;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3551;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:".  This might first show up as funky results from the ls command, for example.";}i:2;i:3552;}i:136;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3630;}i:137;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3630;}i:138;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"You can inspect your EEPROM with the peep command, which prints a map of EEPROM:";}i:2;i:3632;}i:139;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3718;}i:140;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:760:"
> peep
E000:  t13\ d13=  !d13 ;del  ay(1 00)\  star tup\  prin t("R  unni ng b  link -13   demo  - p
E040:  ress  ^C"  ); w hile   1:t 13\.  .... ....  .... ....  .... ....  .... ....  .... ....
E080:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E0C0:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E100:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E140:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E180:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E1C0:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
";i:1;N;i:2;N;}i:2;i:3718;}i:141;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3718;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:203:"This is a healthy map.  The places marked '.' are empty (==255).  The name-value storage for t13 and startup can be seen.  As you add macros you will see them fill from low addresses up, always in pairs.";}i:2;i:4488;}i:143;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4691;}i:144;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4691;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:172:"An unhealthy map might have garbage in the supposedly unused part.  Or there could be free space available but spread around in fragmented blocks (see Fragmentation below).";}i:2;i:4693;}i:146;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4865;}i:147;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4865;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"You can erase and ";}i:2;i:4867;}i:149;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4885;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"reformat";}i:2;i:4886;}i:151;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4894;}i:152;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" the EEPROM using the ";}i:2;i:4895;}i:153;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4917;}i:154;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"rm *";}i:2;i:4918;}i:155;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4922;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:" command; see below.  
This will erase any macros you have typed into bitlash, as well as the garbage.  
In other words:";}i:2;i:4923;}i:157;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5043;}i:158;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5043;}i:159;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:5045;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Note: RM *";}i:2;i:5047;}i:161;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5057;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:" WILL NUKE THE WHOLE EEPROM.  There is no way to recover it.  Please use caution. ";}i:2;i:5058;}i:163;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:5140;}i:164;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:5142;}i:165;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5143;}i:166;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:5143;}i:167;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5149;}i:168;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:48:"A note on EEPROM usage: Don't bang on the EEPROM";i:1;i:3;i:2;i:5149;}i:2;i:5149;}i:169;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5149;}i:170;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5149;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:433:"The EEPROM is said to be certified for about 1e5 cycles.  Bitlash could drive that many write cycles in under ten minutes, if you told it to.  If you do this and your EEPROM breaks you get to keep the pieces.  But please write and let us know how it failed.  We've never seen it happen.
Anyway, use EEPROM for long term storage like macro definitions, not loop counters, and factor EEPROM life into your application life cycle model.";}i:2;i:5209;}i:172;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5643;}i:173;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:5643;}i:174;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5649;}i:175;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"EEPROM Free Space Fragmentation";i:1;i:3;i:2;i:5649;}i:2;i:5649;}i:176;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5649;}i:177;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5649;}i:178;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:175:"Heavy use of the macro store may lead to fragmented free space.  You would see this in the peep map as free space dot clusters too small to be of use scattered here and there.";}i:2;i:5692;}i:179;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5867;}i:180;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5867;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:207:"This version of Bitlash does not have a method to compact the free space, but if you are highly motivated to squeeze out the last possible byte, here is a straightforward but unfortunately manual workaround:";}i:2;i:5869;}i:182;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6077;}i:183;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6077;}i:184;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6077;}i:185;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6077;}i:186;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:" Use 'ls' to get the contents of all the macros.  Copy to safe place!";}i:2;i:6081;}i:187;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6150;}i:188;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6150;}i:189;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6150;}i:190;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6150;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:" Use 'rm *' to nuke the eeprom.  All your macros are gone!  Hope you copied them!";}i:2;i:6154;}i:192;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6235;}i:193;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6235;}i:194;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6235;}i:195;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6235;}i:196;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" Paste the output you saved into your bitlash terminal emulator to re-define the macros.";}i:2;i:6239;}i:197;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6327;}i:198;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6327;}i:199;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6327;}i:200;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6327;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"Depending on many factors, (baud rate, clock speed, terminal program, ";}i:2;i:6329;}i:202;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:6399;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:", ";}i:2;i:6401;}i:204;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:6403;}i:205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:") it may be necessary to paste the definitions one at a time.";}i:2;i:6406;}i:206;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6468;}i:207;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:6468;}i:208;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6474;}i:209;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:39:"Reserving EEPROM for Other Applications";i:1;i:3;i:2;i:6474;}i:2;i:6474;}i:210;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:6474;}i:211;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6474;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:173:"This can be done by adjusting the values of STARTDB and ENDDB in bitlash.cpp.  You are advised to save, reformat, and reload any EEPROM contents after changing these values.";}i:2;i:6525;}i:213;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6698;}i:214;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6698;}i:215;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6698;}}