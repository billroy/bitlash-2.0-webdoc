a:166:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Bitlash Command Reference";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"Here is an alphabetical reference list of Bitlash commands.  (See also ";}i:2;i:40;}i:5;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:16:"bitlashfunctions";i:1;s:17:"Bitlash functions";}i:2;i:111;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:".)";}i:2;i:149;}i:7;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:152;}i:8;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:152;}i:9;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:158;}i:10;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"expression evaluation";i:1;i:3;i:2;i:158;}i:2;i:158;}i:11;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:158;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:158;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"If you type a ";}i:2;i:191;}i:14;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:205;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"naked expression";}i:2;i:206;}i:16;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:222;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:148:" it will be evaluated, and any side effects like function calls and function executions will happen, but nothing is printed unless you say so using ";}i:2;i:223;}i:18;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"Printing";i:1;s:5:"print";}i:2;i:371;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:".  For example:";}i:2;i:389;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:410;}i:21;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:30:"
> d13=1; delay(125); d13=0
>
";i:1;N;i:2;N;}i:2;i:410;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:410;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:119:"Your code is executed (d13 goes high for 125 ms), but all you see on the console is the command prompt after it's done.";}i:2;i:449;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:568;}i:25;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:570;}i:26;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:576;}i:27;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"boot: restart the arduino";i:1;i:3;i:2;i:576;}i:2;i:576;}i:28;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:576;}i:29;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:576;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"Resets the Arduino.  On restart, the ";}i:2;i:613;}i:31;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:650;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"startup";}i:2;i:652;}i:33;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:659;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" function will run, if one is present.";}i:2;i:661;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:700;}i:36;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:700;}i:37;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:706;}i:38;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"function funcname { stmt; ...; stmt;}";i:1;i:3;i:2;i:706;}i:2;i:706;}i:39;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:706;}i:40;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:706;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:"Defines a new Bitlash Function to be stored in EEPROM.";}i:2;i:755;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:809;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:809;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"Note: Earlier versions of Bitlash defined macros using a different syntax.";}i:2;i:811;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:885;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:885;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Bitlash ";}i:2;i:887;}i:48;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:9:"functions";i:1;s:9:"functions";}i:2;i:895;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" have their own section.";}i:2;i:918;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:942;}i:51;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:77:"
> function blip {d13=!d13;}
> ls
function blip {d13=!d13;}
> rm blip
> ls
>
";i:1;N;i:2;N;}i:2;i:949;}i:52;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1035;}i:53;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1041;}i:54;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:36:"help: display some onboard help text";i:1;i:3;i:2;i:1041;}i:2;i:1041;}i:55;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1041;}i:56;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1041;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:"Help displays a short help message that can be helpful if you forget the name of a command or function.  It also displays a list of your functions via 'ls'.";}i:2;i:1089;}i:58;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1246;}i:59;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1246;}i:60;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1252;}i:61;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:57:"if (expr) {stmt;...; stmt;} [else {stmt;stmt;...; stmt;}]";i:1;i:3;i:2;i:1252;}i:2;i:1252;}i:62;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1252;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1252;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"The ";}i:2;i:1321;}i:65;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1325;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"while";}i:2;i:1327;}i:67;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1332;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:1334;}i:69;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1339;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"if";}i:2;i:1341;}i:71;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1343;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:" commands have their ";}i:2;i:1345;}i:73;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:12:"conditionals";i:1;s:11:"own section";}i:2;i:1366;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:1394;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1396;}i:76;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1396;}i:77;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1402;}i:78;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:2:"ls";i:1;i:3;i:2;i:1402;}i:2;i:1402;}i:79;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1402;}i:80;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1402;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"List all the functions stored in EEPROM.";}i:2;i:1416;}i:82;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1456;}i:83;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:60:"
> function blip {d13=!d13;}
> ls
function blip {d13=!d13};
";i:1;N;i:2;N;}i:2;i:1463;}i:84;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1532;}i:85;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1538;}i:86;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"peep: print a map of eeprom";i:1;i:3;i:2;i:1538;}i:2;i:1538;}i:87;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1538;}i:88;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1538;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"Peep prints a map of eeprom usage.  This can help you see how full your EEPROM is, and whether you have fragmented free space.";}i:2;i:1577;}i:90;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1703;}i:91;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:760:"
> peep
E000:  foo\ prin  t #4 :".^  ",\b lip\  d13= !d13  \cc\ ^^^\  t13\ d13=  !d13 ;sno  oze  100\
E040:  b0\b lip;  snoo ze(i  *i); if +  +i>m :i=-  m\st artu  p\ru n t1  3\al fa\a  bcde fghi
E080:  jklm nopq  rstu vwxy  z\cl s\pr  int  #4:"  xfe^ ",\.  .... ....  .... ....  .... ....
E0C0:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E100:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E140:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E180:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
E1C0:  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....  .... ....
";i:1;N;i:2;N;}i:2;i:1710;}i:92;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1710;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Note that the ";}i:2;i:2480;}i:94;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2494;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"E000";}i:2;i:2495;}i:96;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2499;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:" address is actually EEPROM address 0000.  Subtract 0xe000 from the addresses shown.";}i:2;i:2500;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2585;}i:99;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2585;}i:100;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2591;}i:101;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:34:"print [#pin:] [[expr][,]] -- print";i:1;i:3;i:2;i:2591;}i:2;i:2591;}i:102;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2591;}i:103;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2591;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"In its simplest form: print foo,bar will get you started.  But print has a lot of options, so please see the section on ";}i:2;i:2637;}i:105;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:8:"Printing";i:1;N;}i:2;i:2757;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" for details.";}i:2;i:2769;}i:107;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2783;}i:108;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2783;}i:109;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2789;}i:110;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:68:"ps: 'process status' -- print a list of running background functions";i:1;i:3;i:2;i:2789;}i:2;i:2789;}i:111;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2789;}i:112;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2789;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"Ps shows a list of running background functions.";}i:2;i:2869;}i:114;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2917;}i:115;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:23:"
> run t13
> ps
0: t13
";i:1;N;i:2;N;}i:2;i:2924;}i:116;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2956;}i:117;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2962;}i:118;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"rm: delete a function from eeprom";i:1;i:3;i:2;i:2962;}i:2;i:2962;}i:119;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2962;}i:120;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:77:"
> function blip {d13=!d13;}
> ls
function blip {d13=!d13;}
> rm blip
> ls
>
";i:1;N;i:2;N;}i:2;i:3011;}i:121;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3011;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"Use ";}i:2;i:3098;}i:123;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3102;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"rm *";}i:2;i:3103;}i:125;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3107;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" to erase the whole EEPROM.";}i:2;i:3108;}i:127;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3136;}i:128;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3136;}i:129;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3142;}i:130;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"run: run a function in the background";i:1;i:3;i:2;i:3142;}i:2;i:3142;}i:131;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3142;}i:132;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3142;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"See the section on ";}i:2;i:3191;}i:134;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:20:"functions:background";i:1;s:20:"Background functions";}i:2;i:3210;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" for details.";}i:2;i:3255;}i:136;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3274;}i:137;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:27:"
> run t13,125
> ps
0: t13
";i:1;N;i:2;N;}i:2;i:3274;}i:138;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3310;}i:139;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3316;}i:140;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"stop tasknum | stop | stop *";i:1;i:3;i:2;i:3316;}i:2;i:3316;}i:141;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3316;}i:142;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3316;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"Stop a background task by number, stop the current task, or stop all tasks.";}i:2;i:3356;}i:144;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3431;}i:145;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:39:"
> run t13
> ps
0: t13
> stop 0
> ps
>
";i:1;N;i:2;N;}i:2;i:3438;}i:146;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3486;}i:147;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3492;}i:148;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:41:"switch (expr) {stmt0; stmt1; ...; stmtN;}";i:1;i:3;i:2;i:3492;}i:2;i:3492;}i:149;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3492;}i:150;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3492;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"The switch statement is described in ";}i:2;i:3545;}i:152;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:12:"Conditionals";i:1;N;}i:2;i:3582;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3598;}i:154;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3599;}i:155;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:3599;}i:156;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3605;}i:157;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"while (expr) {stmt;...; stmt;}";i:1;i:3;i:2;i:3605;}i:2;i:3605;}i:158;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3605;}i:159;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3605;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"The while and if statements have their own ";}i:2;i:3647;}i:161;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:12:"conditionals";i:1;s:7:"section";}i:2;i:3690;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3714;}i:163;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3715;}i:164;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3715;}i:165;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3715;}}